using System;
using System.Collections.Generic;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            Shop shop = new Shop();
            shop.OpenShop();
        }
    }

    class Persona
    {
        protected List<Product> Inventory = new List<Product>();

        public int Money { get; protected set; }

        public void ShowInfo()
        {
            for (int i = 0; i < Inventory.Count; i++)
            {
                Console.Write($"{i,2} ");
                Inventory[i].ShowInfo();
            }
        }
    }

    class Product
    {
        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"Наименование: {Name,10}      цена: {Price,5}");
        }
    }

    class Trader : Persona
    {
        public Trader()
        {
            Inventory.Add(new Product("Колбаска", 200));
            Inventory.Add(new Product("Сырочек", 150));
            Inventory.Add(new Product("Хлебушек", 40));
            Inventory.Add(new Product("Яички", 90));
            Inventory.Add(new Product("Молочко", 90));
            Inventory.Add(new Product("Булочка", 40));
            Inventory.Add(new Product("Картошечка", 50));
            Inventory.Add(new Product("Сахарочек", 120));
            Inventory.Add(new Product("Рыбка", 350));
            Inventory.Add(new Product("Грибочки", 200));
            Inventory.Add(new Product("Курочка", 300));
            Inventory.Add(new Product("Сосисочки", 250));
            Inventory.Add(new Product("Салатик", 85));
            Inventory.Add(new Product("Мороженка", 70));
            Inventory.Add(new Product("Маслице", 100));
            Inventory.Add(new Product("Сметанище", 400));
        }

        public int ShowInventorySize()
        {
            return Inventory.Count;
        }

        public int GetPrice(int productNumber)
        {
            if (productNumber >= 0 && productNumber < Inventory.Count)
            {
                return Inventory[productNumber].Price;
            }
            else
            {
                return 0;
            }
        }

        public Product GiveProduct(int productNumber)
        {
            if (productNumber >= 0 && productNumber < Inventory.Count)
            {
                return Inventory[productNumber];
            }
            else
            {
                return null;
            }
        }

        public void TakeMoney(int income)
        {
            Money += income;
        }
    }

    class Customer : Persona
    {
        public Customer(int money)
        {
            Money = money;
        }

        public void TakeProduct(Product product)
        {
            if (product != null)
            {
                Inventory.Add(product);
            }
        }

        public void Pay(int price)
        {
            if (price >= 0)
            {
                Money -= price;
            }
        }
    }

    class Shop
    {
        private Trader trader = new Trader();
        private Customer customer = new Customer(2500);

        public void OpenShop()
        {
            string userInput;
            string quitCommand = "Q";
            int customerChoose;
            bool isExit = false;

            while (isExit == false)
            {
                Console.Clear();
                Console.WriteLine("Список товаров продавца: ");
                trader.ShowInfo();
                Console.WriteLine($"\nДеньги покупателя: {customer.Money}");
                Console.SetCursorPosition(0, 22);
                Console.WriteLine("Список купленных товаров: ");
                customer.ShowInfo();
                Console.SetCursorPosition(0, 19);
                Console.Write($"\nКупить товар номер ({quitCommand} - выйти): ");
                userInput = Console.ReadLine();

                if (userInput == quitCommand)
                {
                    isExit = true;
                }
                else if (int.TryParse(userInput, out customerChoose) &&
                         customer.Money >= trader.GetPrice(customerChoose))
                {
                    Trade(customerChoose);
                }
            }
        }

        public void Trade(int customerChoose)
        {
            Product product = trader.GiveProduct(customerChoose);
            int price = trader.GetPrice(customerChoose);

            customer.TakeProduct(product);
            customer.Pay(price);
            trader.TakeMoney(price);
        }
    }
}

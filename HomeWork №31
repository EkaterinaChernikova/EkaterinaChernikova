using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            char[,] map =
            {
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', '#'},
                {'#', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', '#', '#'},
                {'#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#'},
                {'#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#', ' ', '#'},
                {'#', '#', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#'},
                {'#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', ' ', '#'},
                {'#', '#', ' ', ' ', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#'},
                {'#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '$', '#'},
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
            };
     
            Console.CursorVisible = false;
            int userX = 1;
            int userY = 1;
            char playerSymbol = '@';
            bool isExit = false;
            bool isFinished = false;
       
            while(isExit == false)
            {
                DrawMap(map);
                DrawPlayer(playerSymbol, userY, userX);

                if (isFinished == true)
                {
                    isExit = true;
                    Console.SetCursorPosition(0, 21);
                    Console.WriteLine("\n\nСтранно, но вы прошли..");
                    Console.ReadKey();
                }

                Console.SetCursorPosition(0, 15);
                Console.Write("\nЯ хочу сыграть с тобой в игру. \nЧтобы выйти из лабиринта нужно добраться до символа - $. \nВаше местоположение - @. " +
                    "\nДля перемещения: используйте стрелки на клавиатуре." +
                    "\nНажмите Q для выхода из игры." +
                    "\nСтолкновение со стеной вернет вас в начало. " +
                    "\nПриятной игры )\n");

                ConsoleKeyInfo charKey = Console.ReadKey();
                ChangePositon(ref userY, ref userX, charKey);
                DetectCollision(map, ref isFinished, ref userY, ref userX);
                Console.SetCursorPosition(0, 0);
                System.Threading.Thread.Sleep(200);
     
                if(isExit == true)
                {
                    Console.SetCursorPosition(0, 25);
                }
            }
        }
            
        static void DrawMap(char[,] map)
        {
            for(int i = 0; i < map.GetLength(0); i++)
            {
                for(int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i,j]);
                }
                Console.WriteLine();
            }
        }

        static void DrawPlayer(char symbol, int userY, int userX)
        {
            Console.SetCursorPosition(userX, userY);
            Console.Write(symbol);
        }

        static void ChangePositon(ref int userY, ref int userX, ConsoleKeyInfo charKey)
        {
            switch (charKey.Key) //проверка нажатия кнопки
            {
                case ConsoleKey.UpArrow:
                    userY--;
                    break;
                case ConsoleKey.DownArrow:
                    userY++;
                    break;
                case ConsoleKey.LeftArrow:
                    userX--;
                    break;
                case ConsoleKey.RightArrow:
                    userX++;
                    break;
            }
        }
     
        static void DetectCollision(char[,] map, ref bool isFinished, ref int userY, ref int userX)
        {
            switch (map[userY, userX])
            {
                case '#':
                    userY = 1;
                    userX = 1;
                    break;
                case '$':
                    isFinished = true;
                    break;
            }
        }
    }
}

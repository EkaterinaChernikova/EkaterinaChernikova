using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            char[,] map =
            {
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', '#'},
                {'#', '#', '#', '#', '#', '#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', '#', '#'},
                {'#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#'},
                {'#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#', ' ', '#'},
                {'#', '#', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', ' ', '#'},
                {'#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', ' ', '#'},
                {'#', '#', ' ', ' ', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
                {'#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#'},
                {'#', ' ', ' ', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', ' ', ' ', ' ', '$', '#'},
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'},
            };
     
            Console.CursorVisible = false;
            int userPositionX = 1;
            int userPositionY = 1;
            char playerSymbol = '@';
            bool isExit = false;
            bool isFinished = false;
       
            while(isExit == false)
            {
                DrawMap(map);
                DrawPlayer(playerSymbol, userPositionY, userPositionX);
                EndingGameCheck(isFinished, ref isExit);
                DrawMenu();

                ConsoleKeyInfo charKey = Console.ReadKey();

                ChangePositon(ref userPositionY, ref userPositionX, charKey);
                DetectCollision(map, ref isFinished, ref userPositionY, ref userPositionX);

                Console.SetCursorPosition(0, 0);
                System.Threading.Thread.Sleep(200);
                
                if(charKey.Key == ConsoleKey.Q)
                {
                    isExit = true;
                }

                if(isExit == true)
                {
                    Console.SetCursorPosition(0, 25);
                }
            }
        }
            
        static void DrawMap(char[,] map) 
        {
            for(int i = 0; i < map.GetLength(0); i++)
            {
                for(int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i,j]);
                }
                Console.WriteLine();
            }
        }

        static void DrawMenu()
        {
            Console.SetCursorPosition(0, 15);
            Console.Write("\nЯ хочу сыграть с тобой в игру. \nЧтобы выйти из лабиринта нужно добраться до символа - $. \nВаше местоположение - @. " +
                "\nДля перемещения: используйте стрелки на клавиатуре." +
                "\nНажмите Q для выхода из игры." +
                "\nСтолкновение со стеной вернет вас в начало. " +
                "\nПриятной игры )\n");
        }

        static void DrawPlayer(char symbol, int userPositionY, int userPositionX)
        {
            Console.SetCursorPosition(userPositionX, userPositionY);
            Console.Write(symbol);
        }

        static void ChangePositon(ref int userPositionY, ref int userPositionX, ConsoleKeyInfo charKey)
        {
            switch (charKey.Key)
            {
                case ConsoleKey.UpArrow:
                    userPositionY--;
                    break;
                case ConsoleKey.DownArrow:
                    userPositionY++;
                    break;
                case ConsoleKey.LeftArrow:
                    userPositionX--;
                    break;
                case ConsoleKey.RightArrow:
                    userPositionX++;
                    break;
            }
        }
     
        static void DetectCollision(char[,] map, ref bool isFinished, ref int userPositionY, ref int userPositionX)
        {
            switch (map[userPositionY, userPositionX]) 
            {
                case '#':
                    userPositionY = 1;
                    userPositionX = 1;
                    break;
                case '$':
                    isFinished = true;
                    break;
            }
        }

        static void EndingGameCheck(bool isFinished, ref bool isExit)
        {
            if (isFinished == true)
            {
                isExit = true;
                Console.SetCursorPosition(0, 21);
                Console.WriteLine("\n\nСтранно, но вы прошли..");
                Console.ReadKey();
            }
        }
    }
}

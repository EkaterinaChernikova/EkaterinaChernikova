using System;
using System.Collections.Generic;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            const string Command_Exit = "Exit";

            Zoo zoo = new Zoo();
            bool isExit = false;
            string userInput;

            while(isExit == false)
            {
                Console.Clear();
                Console.Write($"Вы находитесь в зоопарке, в зоопарке {zoo.GetEnclousureCount()} вольеров,\n" +
                              $"к какому вольеру вы хотите подойти? \nВведите число (или {Command_Exit} для выхода): ");

                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case Command_Exit:
                        isExit = true;
                        break;
                    default:
                        zoo.Walk(userInput);
                        break;
                }

                Console.ReadKey();
            }
        }
    }

    class Zoo
    {
        private Random _random = new Random();
        private List<Enclosure> _enclosures = new List<Enclosure>();
        private List<Animal> _exampleAnimals = new List<Animal>()
        {
            new Animal("Сова", "Уху"),
            new Animal("Дикий кот", "Мяу"),
            new Animal("Павлин", "аааАААааа!"),
            new Animal("Лошадь", "Фыр"),
            new Animal("Олень-мунжак", "ААААаафф"),
            new Animal("Лось", "Нуууу"),
            new Animal("Рысь", "Аам"),
            new Animal("Кролик", "хурррр"),
            new Animal("Волк", "грррр"),
            new Animal("Черепаха", "***")
        };

        public Zoo()
        {
            foreach (Animal animal in _exampleAnimals)
            {
                _enclosures.Add(new Enclosure(_random, animal));
            }
        }

        public int GetEnclousureCount()
        {
            return _enclosures.Count;
        }

        public void Walk(string userInput)
        {
            int enclosureNumber;
            int.TryParse(userInput, out enclosureNumber);
            enclosureNumber--;

            if (enclosureNumber >= 0 && enclosureNumber < _enclosures.Count)
            {
                _enclosures[enclosureNumber].ShowInfo();
            }
        }
    }

    class Enclosure
    {
        private List<Animal> _animals = new List<Animal>();

        public Enclosure(Random random, Animal animal)
        {
            int minimalAnimalsCount = 5;
            int maximalAnimalsCount = 15;

            Capacity = random.Next(minimalAnimalsCount, maximalAnimalsCount);

            for (int i = 0; i < Capacity; i++)
            {
                _animals.Add(new Animal(animal.Type, animal.Sound, random));
            }
        }

        public int Capacity { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"\nВ данном вальере находятся {Capacity} животных, вида {_animals[0].Type}, они издают звук {_animals[0].Sound}.\n");

            foreach (Animal animal in _animals)
            {
                animal.ShowInfo();
            }
        }
    }

    class Animal
    {
        public Animal(string type, string sound)
        {
            Type = type;
            Sound = sound;
        }

        public Animal(string type, string sound, Random random)
        {
            Type = type;
            Sound = sound;

            if (random.NextDouble() >= 0.5)
            {
                Gender = "M";
            }
            else
            {
                Gender = "Ж";
            }
        }

        public string Type { get; private set; }
        public string Gender { get; private set; }
        public string Sound { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"Название: {Type}, пол: {Gender}");
        }
    }
}

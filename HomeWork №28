using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] fullNames = new string[0];
            string[] posts = new string[0];
            string userInput;
            bool isExit = false;

            while (isExit == false)
            {
                Console.Clear();
                Console.WriteLine(
               "1. Добавить досье\n" +
               "2. Вывести все досье\n" +
               "3. Удалить досье\n" +
               "4. Поиск по фамилии\n" +
               "5. Выход\n"
               );
                Console.Write("Введите номер меню: ");

                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case "1":
                        AddPerson(ref fullNames, ref posts);
                        break;
                    case "2":
                        PrintInfo(fullNames, posts);
                        break;
                    case "3":
                        RemowePerson(ref fullNames, ref posts);
                        break;
                    case "4":
                        Search(fullNames, posts);
                        break;
                    case "5":
                        isExit = true;
                        break;
                }
            }
        }

        static void AddPerson(ref string[] fullNames, ref string[] posts)
        {
            string firstName, secondName, lastName, post;
            Console.Write("\nВведите имя: ");
            firstName = Console.ReadLine();
            Console.Write("\nВведите фамилию: ");
            secondName = Console.ReadLine();
            Console.Write("\nВведите отчество: ");
            lastName = Console.ReadLine();
            Console.Write("\nВведите должность: ");
            post = Console.ReadLine();

            IncreaseSize(ref fullNames);
            fullNames[fullNames.Length - 1] = lastName + " " + firstName + " " + secondName;

            IncreaseSize(ref posts);
            posts[posts.Length - 1] = post;
        }

        static void PrintInfo(string[] fullNames, string[] posts)
        {
            if (IsEmpty(fullNames.Length) == false)
                return;

            for (int i = 0; i < fullNames.Length; i++)
                Console.WriteLine($"{i + 1} - {fullNames[i]} - {posts[i]}");

            Console.ReadLine();
        }

        static void RemowePerson(ref string[] fullNames, ref string[] posts)
        {
            if (IsEmpty(fullNames.Length) == false)
                return;

            Console.Write("Введите порядковый номер из списка для удаления: ");
            int index = Convert.ToInt32(Console.ReadLine());

            if (index >= 0 && index <= fullNames.Length)
            {
                for (int i = index - 1; i < fullNames.Length - 1; i++)
                {
                    fullNames[i] = fullNames[i + 1];
                    posts[i] = posts[i + 1];
                }

                DecreaseSize(ref fullNames);
                DecreaseSize(ref posts);
            }
        }

        static void Search(string[] fullNames, string[] posts)
        {
            if (IsEmpty(fullNames.Length) == false)
                return;

            Console.Write("Введите фамилию для поиска: ");
            string userInput = Console.ReadLine();
            string[] splitString;

            for (int i = 0; i < fullNames.Length; i++)
            {
                splitString = fullNames[i].Split(' ');

                if (splitString[0] == userInput)
                {
                    Console.WriteLine($"{i + 1} - {fullNames[i]} - {posts[i]}");
                    break;
                }
            }
            Console.ReadKey();
        }

        static bool IsEmpty(int listSize)
        {
            if (listSize == 0)
            {
                Console.WriteLine("Список пуст.");
                Console.ReadKey();
                return false;
            }
            return true;
        }

        static void DecreaseSize(ref string[] massive)
        {
            string[] buffer = new string[massive.Length - 1];

            for(int i = 0; i < buffer.Length; i++)
            {
                buffer[i] = massive[i];
            }

            massive = buffer;
        }

        static void IncreaseSize(ref string[] massive)
        {
            int oldSize = massive.Length;
            string[] buffer = new string[massive.Length + 1];

            if(massive.Length > 0)
            {
                for (int i = 0; i < massive.Length; i++)
                {
                    buffer[i] = massive[i];
                }
            }

            massive = buffer;
        }
    }
}

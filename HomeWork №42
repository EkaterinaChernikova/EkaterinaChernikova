using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace HomeWork_1
{
    class Program
    {
        static void Main(string[] args)
        {
            Repository repository = new Repository();
            string userInput;
            bool isExit = false;

            while (isExit == false)
            {
                Console.Clear();
                Console.WriteLine($"Количество книг в хранилище: {repository.GetBooksCount()} ");
                Console.Write("\n1 - Добавить книгу. \n2 - Убрать книгу. \n3 - Показать все книги. \n4 - Показать книги по указанному параметру. \n5 - Выйти.\n\nВаш ввод: ");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        repository.AddBook();
                        break;
                    case "2":
                        repository.RemoveBook();
                        break;
                    case "3":
                        repository.ShowAllBooks();
                        break;
                    case "4":
                        SearchForBook(repository);
                        break;
                    case "5":
                        isExit = true;
                        break;

                }
            }
        }

        private static void SearchForBook(Repository repository)
        {
            string userInput;
            bool isExit = false;

            while (isExit == false)
            {
                Console.Clear();
                Console.Write("\n1 - Поиск по названию книги.  \n2 - Поиск по автору.  \n3 - Поиск по году издания. \n4 - Выйти. \n\nВаш ввод: ");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        repository.ShowBooksByTitle();
                        break;
                    case "2":
                        repository.ShowBooksByAutor();
                        break;
                    case "3":
                        repository.ShowBooksByYear();
                        break;
                    case "4":
                        isExit = true;
                        continue;
                }

                Console.ReadKey();
            }
        }
    }

    class Book
    {
        public string Title { get; private set; }
        public string Author  { get; private set; }
        public int Year { get; private set; }

        public Book(string title, string author, int year)
        {
            Title = title;
            Author = author;
            Year = year;
        }

        public void ShowInfo()
        {
            Console.WriteLine($"Название книги - {Title}, автор - {Author}, год выпуска - {Year}");
        }
    }

    class Repository
    {
        private List<Book> _books = new List<Book>();

        public int GetBooksCount()
        {
            return _books.Count;
        }

        public void AddBook()
        {
            string userInput;
            Console.Write("Добавить название книги: ");
            string title = Console.ReadLine();
            Console.Write("Добавить автора книги: ");
            string author = Console.ReadLine();
            int year;

            do
            {
                Console.SetCursorPosition(0, 11);
                Console.Write("Добавить год издания книги:                 ");
                Console.SetCursorPosition(28,11);
                userInput = Console.ReadLine();
            }
            while (int.TryParse(userInput, out year) == false);

            _books.Add(new Book(title, author, year));
        }

        public void RemoveBook()
        {
            string userInput;
            Console.Write("Укажите название книги: ");
            string title = Console.ReadLine();
            Console.Write("Укажите автора книги: ");
            string author = Console.ReadLine();
            int year;

            do
            {
                Console.SetCursorPosition(0, 11);
                Console.Write("Укажите год издания книги:                 ");
                Console.SetCursorPosition(27, 11);
                userInput = Console.ReadLine();
            }
            while (int.TryParse(userInput, out year) == false);

            for (int i = 0; i < _books.Count; i++)
            {
                if (_books[i].Title == title && _books[i].Author == author && _books[i].Year == year)
                {
                    _books.Remove(_books[i]);
                }
            }
        }

        public void ShowAllBooks()
        {
            foreach (var book in _books)
            {
                book.ShowInfo();
            }

            Console.ReadKey();
        }

        public void ShowBooksByTitle()
        {
            Console.Write("Введите название книги: ");
            string userInput = Console.ReadLine();

            foreach (var book in _books)
            {
                if (book.Title == userInput)
                {
                    book.ShowInfo();
                }
            }
        }

        public void ShowBooksByAutor()
        {
            Console.Write("Введите автора книги: ");
            string userInput = Console.ReadLine();

            foreach (var book in _books)
            {
                if (book.Author == userInput)
                {
                    book.ShowInfo();
                }
            }
        }

        public void ShowBooksByYear()
        {
            string userInput;
            int year;

            do
            {
                Console.SetCursorPosition(0, 7);
                Console.Write("Введите год издания:          ");
                Console.SetCursorPosition(21, 7);
                userInput = Console.ReadLine();
            }
            while (int.TryParse(userInput, out year) == false);

            foreach (var book in _books)
            {
                if (book.Year == year)
                {
                    book.ShowInfo();
                }
            }
        }
    }
}

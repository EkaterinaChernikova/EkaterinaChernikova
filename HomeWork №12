using System;

namespace HomeWork
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandRubToUsd = "1";
            const string CommandRubToEur = "2";
            const string CommandUsdToRub = "3";
            const string CommandUsdToEur = "4";
            const string CommandEurToRub = "5";
            const string CommandEurToUsd = "6";
            const string CommandExit = "7";

            float rub = 1000.0f;
            float usd = 1000.0f;
            float eur = 1000.0f;

            float exchangeRateRubUsd = 56.9690f;
            float exchangeRateRubEur = 58.8705f;
            float exchangeRateUsdEur = 0.9677f;
            float exchangeRateUsdRub = 0.0175f;
            float exchangeRateEurUsd = 1.0334f;
            float exchangeRateEurRub = 0.0170f;

            bool isExit = false;
            string userInput;
            float transferSum = 0.0f;

            while (isExit == false)
            {
                Console.Clear();
                Console.WriteLine($"Ваш баланс:\n" +
                    $"RUB = {rub}\n" +
                    $"USD = {usd}\n" +
                    $"EUR = {eur}\n" +
                    $"\nКакую валюту вы хотите конвертировать?\n" +
                    $"{CommandRubToUsd}. RUB => USD \n" +
                    $"{CommandRubToEur}. RUB => EUR \n" +
                    $"{CommandUsdToRub}. USD => RUB \n" +
                    $"{CommandUsdToEur}. USD => EUR \n" +
                    $"{CommandEurToRub}. EUR => RUB \n" +
                    $"{CommandEurToUsd}. EUR => USD \n" +
                    $"{CommandExit}. Выйти из программы.");
                Console.Write("Введите номер меню: ");
                userInput = Console.ReadLine();

                Console.Write("Сколько валюты сконвертировать: ");
                transferSum = Convert.ToSingle(Console.ReadLine());

                switch (userInput)
                {
                    case CommandRubToUsd:
                        if (rub >= transferSum)
                        {
                            rub -= transferSum;
                            usd += transferSum * exchangeRateUsdRub;
                        }
                        break;
                    case CommandRubToEur:
                        if (rub >= transferSum)
                        {
                            rub -= transferSum;
                            eur += transferSum * exchangeRateEurRub;
                        }
                        break;
                    case CommandUsdToRub:
                        if (usd >= transferSum)
                        {
                            usd -= transferSum;
                            rub += transferSum * exchangeRateRubUsd;
                        }
                        break;
                    case CommandUsdToEur:
                        if (usd >= transferSum)
                        {
                            usd -= transferSum;
                            eur += transferSum * exchangeRateEurUsd;
                        }
                        break;
                    case CommandEurToRub:
                        if (eur >= transferSum)
                        {
                            eur -= transferSum;
                            rub += transferSum * exchangeRateRubEur;
                        }
                        break;
                    case CommandEurToUsd:
                        if (eur >= transferSum)
                        {
                            eur -= transferSum;
                            usd += transferSum * exchangeRateUsdEur;
                        }
                        break;
                    case CommandExit:
                        isExit = true;
                        break;
                }
            }
        }
    }
}
